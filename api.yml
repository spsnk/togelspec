openapi: 3.0.3
info:
  title: Yoga Togel API
  description: Latest changes


    Version 1.1.0

    - Added catalogs.banks

    - Added catalogs.markets

  termsOfService: /tos
  contact:
    email: webmaster@yogatogel.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.1.0
servers:
  - url: https://togel.pridosandbox.com/v1
    description: Development server for testing.
  - url: https://api.togel.com/v1
    description: Production server. Domain TBD.
externalDocs:
  url: /docs
  description: Find database diagrams and more info here.
tags:
  - name: catalog
    description: Catalogs. No security.
  - name: account
    description: Account operations, register new member, enroll and verify.
      These endpoints are to be called by non authenthicated users.
  - name: member
    description: Member operations, related to logged in user.
      Should always use a Bearer token for authorization.
  - name: admin
    description: Administration operations
  - name: togel
    description: Togel System API
security:
  - Token: []
paths:
  /members:
    post:
      security: []
      operationId: member.create
      tags:
        - account
      summary: Enroll a new member
      description: Registers a new member in the system.
        Sends email with verification code.
        Sets member as inactive until verification is complete.
      requestBody:
        description: Member object to be enrolled.
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/MemberCreate"
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Returns an url of the type /members/{memberId}, confirming the creation.
              schema:
                type: string
          content: {}
        "400":
          $ref: "codes.yml#/response/400"
        default:
          $ref: "codes.yml#/response/default"
    get:
      operationId: self.get
      tags:
        - member
      summary: Retrieve logged in member profile.
      description: Retrieve self member basic profile information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Member"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        default:
          $ref: "codes.yml#/response/default"
  /members/{memberId}/verify/{code}:
    get:
      security: []
      operationId: member.verify
      tags:
        - account
      summary: Verify a member with special code.
      description: Confirm a member given a verification code.
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
            format: UUID
      responses:
        "204":
          description: Verified
          content: {}
        "400":
          $ref: "codes.yml#/response/400"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Error"
  /members/login:
    post:
      security: []
      operationId: member.login.post
      tags:
        - account
      summary: Login action
      description: Logs in the user and returns an authorization token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: objects.yml#/requests/login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "objects.yml#/response/auth"
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Error"
  /members/bets:
    get:
      operationId: member.bet.get
      tags:
        - member
      summary: Retrieve logged in member bets.
      description: List the active bets of the logged in user (market has not closed) and the last 10 bets of closed markets.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Bet"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        default:
          $ref: "codes.yml#/response/default"
  /members/{memberId}:
    get:
      operationId: admin.member.get
      tags:
        - admin
      summary: Retrieve specific member profile.
      description: Retrieve specific member basic profile information.
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Member"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Member not found
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Error"
  /members/{memberId}/bets:
    get:
      operationId: admin.member.bets.get
      tags:
        - admin
      summary: Retrieve specific member bet list
      description: Retreive bet list
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Bet"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        default:
          $ref: "codes.yml#/response/default"
  /members/winners:
    get:
      operationId: member.winners.get
      tags:
        - member
      summary: Retrieve latest winnerss
      description: Retrieve latest winners
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Member"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        default:
          $ref: "codes.yml#/response/default"
  /catalogs/banks:
    get:
      security: []
      operationId: catalog.banks
      tags:
        - catalog
      summary: Retrieve the available banks.
      description: Gets a list of available banks for displaying on frontend.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Bank"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        default:
          $ref: "codes.yml#/response/default"
  /catalogs/markets:
    get:
      security: []
      operationId: catalog.markets
      tags:
        - catalog
      summary: Retrieve the available markets.
      description: Returns a list of available markets with the available games for displaying on frontend. Cache this response for half an hour.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Market"
components:
  securitySchemes:
    Token:
      type: http
      scheme: bearer
    Apikey:
      type: apiKey
      in: header
      name: X-API-Key
