openapi: 3.0.3
info:
  title: YogaTogel API
  description: <b>Latest changes</b>


    Version 1.3.0

    - Refactored GET member/bets

    - Added POST member/bets


    Version 1.2.4

    - Added bank.create


    Version 1.2.3

    - Normalized catalogs with REST

    - Added GameType creation and catalog


    Version 1.2.2

    - Added staff login and logout


    Version 1.2.1

    - Moved /members/winners to catalogs.


    Version 1.2.0

    - Added catalogs.banks

    - Added catalogs.markets

    - Added API key authentication to admin.

  termsOfService: https://pridosandbox.com/tos
  contact:
    email: webmaster@yogatogel.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.5.0
servers:
  - url: https://togel.pridosandbox.com/api
    description: Staging environment.
  - url: http://localhost/api
    description: Local development
  - url: https://api.togel.com/v1
    description: Production server. Domain TBD.
externalDocs:
  url: https://pridosandbox.com/docs
  description: Find database diagrams and more info here.
tags:
  - name: catalog
    description: Catalogs. No security.
  - name: account
    description: Account operations, register new member, enroll and verify.
      These endpoints are to be called by non authenthicated users.
  - name: member
    description: Member operations, related to logged in user.
      Should always use a Bearer token for authorization. Such token contains user information, like member_id, username and status.
  - name: admin
    description: Administration operations
  - name: togel
    description: Togel System API
security:
  - Token: []
paths:
  /members/login:
    post:
      security: []
      operationId: member.login
      tags:
        - account
      summary: Login action for member
      description: Logs in the user and returns an authorization token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: objects.yml#/requests/login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "objects.yml#/response/auth"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /members/logout:
    post:
      security:
        - Token: []
      operationId: member.logout
      tags:
        - account
      summary: Logout action for member
      description: Logs out the member and revokes the previous auth token.
      responses:
        "204":
          $ref: "codes.yml#/response/204"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff/login:
    post:
      security:
        - Apikey: []
      operationId: admin.login.post
      tags:
        - admin
      summary: Login action for admin
      description: Logs in the admin and returns an authorization token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: objects.yml#/requests/login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "objects.yml#/response/auth"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff/logout:
    post:
      security:
        - Apikey: []
          Token: []
      operationId: admin.logout
      tags:
        - admin
      summary: Logout action for admin
      description: Logs out the admin and revokes the previous authorization token.
      responses:
        "204":
          $ref: "codes.yml#/response/204"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff:
    post:
      security:
        - Apikey: []
          Token: []
      operationId: admin.staff.create
      tags:
        - admin
      summary: Creates new staff
      description: Creates new staff username
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/Staff"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.staff.catalog
      tags:
        - admin
      summary: Retrieves Staff Member
      description: Retrieve self member basic profile information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Member"
        "400":
          $ref: "codes.yml#/response/400"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff/{staffId}:
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.staff.get
      tags:
        - admin
      summary: Retrieve Specific staff info.
      description: Retrieve Specific staff info.
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Staff"
        "400":
          $ref: "codes.yml#/response/400"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    patch:
      security:
        - Apikey: []
          Token: []
      operationId: admin.staff.update
      tags:
        - admin
      summary: Updates staff
      description: Updates Staff
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/Staff"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
  /members:
    post:
      security: []
      operationId: member.create
      tags:
        - account
      summary: Enroll a new member
      description: Registers a new member in the system.
        Sends email with verification code.
        Sets member as inactive until verification is complete.
      requestBody:
        description: Member object to be enrolled.
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/MemberCreate"
        required: true
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      operationId: self.profile
      tags:
        - member
      summary: Retrieve logged in member profile.
      description: Retrieve self member basic profile information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Member"
        "400":
          $ref: "codes.yml#/response/400"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    patch:
      operationId: self.update
      tags:
        - member
      summary: Modifies the logged in member profile.
      description: Modifies the logged in member information, bank information, referral, email (needs to trigger verification again), etc.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/Member"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /members/{memberId}/verify/{code}:
    get:
      security: []
      operationId: member.verify
      tags:
        - account
      summary: Verify a member with special code.
      description: Confirm a member given a verification code.
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
            format: UUID
      responses:
        "204":
          description: Verified
          content: {}
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /members/bets:
    get:
      operationId: member.bet.history
      tags:
        - member
      summary: Retrieve logged in member bets.
      description: List the active bets of the logged in user (market has not closed) and the last 10 bets of closed markets.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Ticket"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    post:
      operationId: member.bet.create
      tags:
        - member
      summary: Submit a bet for the current logged in user.
      description:
        Total cost of bets should be calculated and verified against credit so it doesnt exceed available credit on the user account.


        The credit should substracted from user and submitting of the bet after all checks passed. Should be a Transactional operation.


        Returns a 422 Insuficient Credit when there is not enough credit.


        Should also check that no repeated Ticket.bets are submitted, with the same number and game_id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "components.yml#/schemas/Ticket"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
  /members/transactions:
    post:
      security:
        - Token: []
      operationId: member.transaction
      tags:
        - member
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/TransactionCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
  /banks:
    post:
      security:
        - Apikey: []
          Token: []
      operationId: admin.banks.create
      tags:
        - admin
      summary: Create new Bank
      description: Creates new Bank
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/BankCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security: []
      operationId: catalog.banks
      tags:
        - catalog
      summary: Retrieve the available banks.
      description: Gets a list of available banks for displaying on frontend.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Bank"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /banks/{bankId}:
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.banks.get
      tags:
        - admin
      summary: Retrieve specific bank info.
      description: Retrieve specific bank info.
      parameters:
        - name: bankId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/BankCreate"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    patch:
      security:
        - Apikey: []
          Token: []
      operationId: admin.banks.update
      tags:
        - admin
      summary: Update Bank
      description: Update Bank
      parameters:
        - name: bankId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/BankCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
  /markets:
    get:
      security: []
      operationId: catalog.markets
      tags:
        - catalog
      summary: Retrieve the available markets.
      description: Returns a list of available markets with the available games for displaying on frontend. Cache this response for half an hour.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Market"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /members/winners:
    get:
      security: []
      operationId: member.winners.get
      tags:
        - catalog
      summary: Retrieve latest winnerss
      description: Retrieve latest winners
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Member"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"

  /members/{memberId}:
    get:
      security:
        - Token: []
          Apikey: []
      operationId: admin.member.get
      tags:
        - admin
      summary: Retrieve specific member profile.
      description: Retrieve specific member basic profile information.
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Member"
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /members/{memberId}/bets:
    get:
      security:
        - Token: []
          Apikey: []
      operationId: admin.member.bets.get
      tags:
        - admin
      summary: Retrieve specific member bet list
      description: Retreive bet list
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Bet"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /games/types:
    post:
      security:
        - Token: []
          Apikey: []
      operationId: admin.game.type.create
      tags:
        - admin
      summary: Adds a new game type to the catalog.
      description: Adds a new game type to be used on Game creation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/GameTypeCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security: []
      operationId: catalogs.game.types
      tags:
        - catalog
      summary: Retrieve the available games.
      description: Returns a list of available markets with the available game types for displaying on frontend. Cache this response for a week.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/GameType"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /markets/{marketId}/games:
    post:
      security:
        - Apikey: []
          Token: []
      operationId: admin.market.game.create
      tags:
        - admin
      summary: Adds a new game to a market
      description: Adds new Game to a Market
      parameters:
        - name: marketId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/GameCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.market.game.catalog
      tags:
        - admin
      summary: Retrieves all games from a market
      description: Retrieves all games from a market
      parameters:
        - name: marketId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Game"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /markets/{marketId}/games/{gameId}:
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.market.game.get
      tags:
        - admin
      summary: Retrieves specific game info from a market
      description: Retrieves specific game info from a market
      parameters:
        - name: marketId
          in: path
          required: true
          schema:
            type: string
        - name: gameId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/GameCreate"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    patch:
      security:
        - Apikey: []
          Token: []
      operationId: admin.market.game.update
      tags:
        - admin
      summary: Updates a game from a market
      description: Updates a Game from a Market
      parameters:
        - name: marketId
          in: path
          required: true
          schema:
            type: string
        - name: gameId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/GameCreate"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff/banks/accounts:
    post:
      security:
        - Apikey: []
          Token: []
      operationId: admin.bank.account.create
      tags:
        - admin
      summary: Creates a new staff bank account
      description: Creates a new staff bank account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/StaffBankAccount"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "409":
          $ref: "codes.yml#/response/409"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.bank.account.catalog
      tags:
        - admin
      summary: Retrieves a list of all the staff bank accounts
      description: Retrieves a list of all the staff bank accounts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/StaffBankAccount"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /staff/banks/accounts/{accountId}:
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.bank.account.get
      tags:
        - admin
      summary: Retrieves info for a specific staff bank account.
      description: Retrieves info for a specific staff bank account.
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/StaffBankAccount"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    patch:
      security:
        - Apikey: []
          Token: []
      operationId: admin.bank.account.update
      tags:
        - admin
      summary: Updates info for a specific staff bank account.
      description: Updates info for a specific staff bank account.
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/StaffBankAccount"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /transactions:
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.transaction.catalog
      tags:
        - admin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components.yml#/schemas/Transaction"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
  /transactions/{transactionId}:
    patch:
      security:
        - Apikey: []
          Token: []
      operationId: admin.transaction.update
      tags:
        - admin
      parameters:
        - name: transactionId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yml#/schemas/Transaction"
      responses:
        "201":
          $ref: "codes.yml#/response/201"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"
    get:
      security:
        - Apikey: []
          Token: []
      operationId: admin.transaction.get
      tags:
        - admin
      parameters:
        - name: transactionId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "components.yml#/schemas/Transaction"
        "400":
          $ref: "codes.yml#/response/400"
        "404":
          $ref: "codes.yml#/response/404"
        "405":
          $ref: "codes.yml#/response/405"
        "422":
          $ref: "codes.yml#/response/default"

components:
  securitySchemes:
    Token:
      type: http
      scheme: bearer
    Apikey:
      type: apiKey
      in: header
      name: X-API-Key
